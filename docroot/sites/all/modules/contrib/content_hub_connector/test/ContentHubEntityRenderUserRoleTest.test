<?php

/**
 * @file
 * Tests for content_hub_connector.module.
 */

/**
 * Tests the functionality of the Acquia Content Hub module.
 *
 * Class ContentHubEntityRenderUserRoleTest.
 */
class ContentHubEntityRenderUserRoleTest extends DrupalWebTestCase {

  /**
   * {@inheritdoc}
   */
  protected $profile = 'testing';

  /**
   * Nodes used in the test.
   *
   * @var array
   */
  protected $nodes = array();

  /**
   * {@inheritdoc}
   */
  public static function getInfo() {
    return array(
      'name' => 'Acquia Content Hub User Role',
      'description' => 'Tests entity user role render.',
      'group' => 'Acquia Content Hub',
    );
  }

  /**
   * {@inheritdoc}
   */
  public function setUp() {
    $modules = array(
      'content_hub_connector',
      'content_hub',
      'content_hub_test',
      'node',
      'field',
    );
    parent::setUp($modules);
    variable_set('content_hub_connector_test_enable_theme', FALSE);
    variable_set('content_hub_connector_test_enable_admin_paths', FALSE);

    $this->drupalCreateContentType(array('type' => 'article', 'name' => 'Article'));

    $edit = array(
      'title' => $this->randomName(10),
      'type' => 'article',
      'body' => array(LANGUAGE_NONE => array(array('value' => $this->randomName(100)))),
      'status' => NODE_NOT_PUBLISHED,
    );
    $this->nodes['not_published'] = $this->drupalCreateNode($edit);

    $edit = array(
      'title' => $this->randomName(10),
      'type' => 'article',
      'body' => array(LANGUAGE_NONE => array(array('value' => $this->randomName(100)))),
      'status' => NODE_PUBLISHED,
    );
    $this->nodes['published'] = $this->drupalCreateNode($edit);
  }

  /**
   * Test CDF render for anonymous role.
   */
  public function testContentHubAnonymousRoleCdfRender() {
    variable_set('content_hub_connector_user_role', DRUPAL_ANONYMOUS_RID);

    $this->drupalGet('node/' . $this->nodes['not_published']->nid);
    $this->assertResponse(403);

    $cdf = new \Drupal\content_hub_connector\Cdf('node', $this->nodes['not_published']->uuid);
    $rend = $cdf->renderNodeViewMode($this->nodes['not_published'], 'full');
    $this->assertEqual($rend, '', 'Unpublished node is not visible for anonymous users.');

    $cdf = new \Drupal\content_hub_connector\Cdf('node', $this->nodes['published']->uuid);
    $rend = $cdf->renderNodeViewMode($this->nodes['published'], 'full');
    $this->assertTrue(strpos($rend, $this->nodes['published']->title) !== FALSE, 'Node title rendered successfully.');
    $this->assertTrue(strpos($rend, $this->nodes['published']->body[LANGUAGE_NONE][0]['value']) !== FALSE, 'Node body rendered successfully.');

    variable_set('content_hub_connector_test_view_body', FALSE);
    $cdf = new \Drupal\content_hub_connector\Cdf('node', $this->nodes['published']->uuid);
    $rend = $cdf->renderNodeViewMode($this->nodes['published'], 'full');
    $this->assertTrue(strpos($rend, $this->nodes['published']->title) !== FALSE, 'Node title rendered successfully.');
    $this->assertTrue(strpos($rend, $this->nodes['published']->body[LANGUAGE_NONE][0]['value']) === FALSE, 'Node body is not accessible.');
    variable_del('content_hub_connector_test_view_body');
  }

  /**
   * Test CDF render for authenticated role.
   */
  public function testContentHubAuthenticatedRoleCdfRender() {
    variable_set('content_hub_connector_user_role', DRUPAL_AUTHENTICATED_RID);

    $this->drupalGet('node/' . $this->nodes['not_published']->nid);
    $this->assertResponse(403);

    $cdf = new \Drupal\content_hub_connector\Cdf('node', $this->nodes['not_published']->uuid);
    $rend = $cdf->renderNodeViewMode($this->nodes['not_published'], 'full');
    $this->assertEqual($rend, '', 'Unpublished node is not visible for authenticated users.');

    $cdf = new \Drupal\content_hub_connector\Cdf('node', $this->nodes['published']->uuid);
    $rend = $cdf->renderNodeViewMode($this->nodes['published'], 'full');
    $this->assertTrue(strpos($rend, $this->nodes['published']->title) !== FALSE, 'Node title rendered successfully.');
    $this->assertTrue(strpos($rend, $this->nodes['published']->body[LANGUAGE_NONE][0]['value']) !== FALSE, 'Node body rendered successfully.');

    variable_set('content_hub_connector_test_view_body', FALSE);
    $cdf = new \Drupal\content_hub_connector\Cdf('node', $this->nodes['published']->uuid);
    $rend = $cdf->renderNodeViewMode($this->nodes['published'], 'full');
    $this->assertTrue(strpos($rend, $this->nodes['published']->title) !== FALSE, 'Node title rendered successfully.');
    $this->assertTrue(strpos($rend, $this->nodes['published']->body[LANGUAGE_NONE][0]['value']) === FALSE, 'Node body is not accessible.');
    variable_del('content_hub_connector_test_view_body');
  }

}
