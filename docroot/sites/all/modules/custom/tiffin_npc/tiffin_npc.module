<?php
/**
* @file
 * Code for the Tiffin NPC feature.
*/

/**
function tiffin_npc_menu() {
$items = array();
$items['tiffin_npc_form'] = array(
'title' => t('Net Price Calculator'),
'page callback' => 'drupal_get_form',
'page arguments' => array('tiffin_npc_form'),
'access arguments' => array('access content'),
'description' => t('Tiffin NPC'),
'type' => MENU_NORMAL_ITEM,
);
return $items;
}
 */

/**
 * Implements hook_block_info().
 */
function tiffin_npc_block_info() {
  $blocks = array();

  $blocks['tiffin_npc'] = array(
    'info' => t('Net Price Calculator block'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function tiffin_npc_block_view($delta) {
  $block = array();

  switch ($delta) {
    case 'tiffin_npc':
      $block['subject'] = t('Net Price Calculator');
      $block['content'] = drupal_get_form('tiffin_npc_form');
      break;
  }
  return $block;
}

/**
 * Returns the render array for the form.
 */
function tiffin_npc_form($form, &$form_state) {

  $states_options = array(
    '' => t('--- Select ---'),
    'AL' => t('Alabama'),
    'AK' => t('Alaska'),
    'AZ' => t('Arizona'),
    'AR' => t('Arkansas'),
    'CA' => t('California'),
    'CO' => t('Colorado'),
    'CT' => t('Connecticut'),
    'DE' => t('Delaware'),
    'DC' => t('District of Columbia'),
    'FL' => t('Florida'),
    'GA' => t('Georgia'),
    'HI' => t('Hawaii'),
    'ID' => t('Idaho'),
    'IL' => t('Illinois'),
    'IN' => t('Indiana'),
    'IA' => t('Iowa'),
    'KS' => t('Kansas'),
    'KY' => t('Kentucky'),
    'LA' => t('Louisiana'),
    'ME' => t('Maine'),
    'MD' => t('Maryland'),
    'MA' => t('Massachusetts'),
    'MI' => t('Michigan'),
    'MN' => t('Minnesota'),
    'MS' => t('Mississippi'),
    'MO' => t('Missouri'),
    'MY' => t('Montana'),
    'NE' => t('Nebraska'),
    'NV' => t('Nevada'),
    'NH' => t('New Hampshire'),
    'NJ' => t('New Jersey'),
    'NM' => t('New Mexico'),
    'NY' => t('New York'),
    'NC' => t('North Carolina'),
    'ND' => t('North Dakota'),
    'OH' => t('Ohio'),
    'OK' => t('Oklahoma'),
    'OR' => t('Oregon'),
    'PA' => t('Pennsylvania'),
    'RI' => t('Rhode Island'),
    'SC' => t('South Carolina'),
    'SD' => t('South Dakota'),
    'TN' => t('Tennessee'),
    'TX' => t('Texas'),
    'UT' => t('Utah'),
    'VT' => t('Vermont'),
    'VA' => t('Virginia'),
    'WA' => t('Washington'),
    'WV' => t('West Virginia'),
    'WI' => t('Wisconsin'),
    'WY' => t('Wyoming'),
  );

  $form['personal_info'] = array(
    '#type' => 'fieldset',
    '#title' => t('Name'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
    $form['personal_info']['first'] = array(
      '#type' => 'textfield',
      '#required' => TRUE,
      '#title' => "First name",
      '#description' => "Please enter your first name.",
      '#size' => 20,
      '#maxlength' => 20,
    );
    $form['personal_info']['last'] = array(
      '#type' => 'textfield',
      '#required' => TRUE,
      '#title' => "Last name",
      '#description' => "Please enter your last name.",
      '#size' => 20,
      '#maxlength' => 30,
    );

  $form['personal_info']['email'] = array(
    '#type' => 'textfield',
    '#required' => TRUE,
    '#title' => "Email Address",
    '#description' => "Please enter your email address.",
    '#size' => 20,
    '#maxlength' => 50,
  );
  $form['personal_info']['address'] = array(
    '#type' => 'textfield',
    '#required' => TRUE,
    '#title' => "Address",
    '#description' => "Please enter your street address.",
    '#size' => 20,
    '#maxlength' => 50,
  );
  $form['personal_info']['address_2'] = array(
    '#type' => 'textfield',
    '#title' => t(''),
    '#required' => FALSE,
    '#size' => 20,
    '#maxlength' => 50,
  );
  $form['personal_info']['city'] = array(
    '#type' => 'textfield',
    '#required' => TRUE,
    '#title' => "City",
    '#description' => "Please enter your city.",
    '#size' => 20,
    '#maxlength' => 50,
  );

   $form['personal_info']['state'] = array(
        '#description' => "Your home state",
        '#type' => 'select',
        '#options' => $states_options,
        '#empty_option' => t('-- Select --'),
        '#default_value' => $state,
        '#required' => TRUE,
      );

  $form['personal_info']['zip'] = array(
    '#type' => 'textfield',
    '#required' => TRUE,
    '#title' => "Zip Code",
    '#description' => "Please enter your Zip Code.",
    '#size' => 10,
    '#maxlength' => 15,
  );

  $form['personal_info']['phone_type'] = array(
    '#type' => 'select',
    '#title' => t('Phone Type'),
    '#description' => "Select your phone number type.",
    '#options' => array(
      'home' => t('Home'),
      'cell' => t('Cell'),
      'work' => t('Work'),
    ),
    '#required' => TRUE,
  );


  $form['personal_info']['phone_number'] = array(
    '#type' => 'textfield',
    '#title' => 'Phone Number',
    '#description' => "Primary phone number.",
    '#required' => TRUE,
    '#size' => 15,
    '#maxlength' => 15,
  );

  $form['academic_info'] = array(
    '#type' => 'fieldset',
    '#title' => t('Academic Information'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );

  $grad_year_min = (date('Y') - 15);
  $grad_year_max = (date('Y') + 4);

  $form['academic_info']['high_school_grad_year'] = array(
    '#title' => 'High School Graduation Year',
    '#type' => 'select',
    '#options' => drupal_map_assoc(range($grad_year_min, $grad_year_max)),
    '#required' => TRUE,
  );

  $prep_course_score_min = 0;
  $prep_course_score_max = 10;
    $form['academic_info']['prep_courses_score'] = array(
      '#type' => 'select',
      '#title' => 'College Prep Courses Score',
      '#options' => drupal_map_assoc(range($prep_course_score_min, $prep_course_score_max)),
      '#width' => '30%',
      '#align' => 'center',
      '#required' => TRUE,
      '#maxlength' => 3,
      '#suffix' => '<div><a href="/finaid/prepscore">View Points Table First to Determine Score</a></div><br><br>',
    );

  $gpa_array = array("1.0","1.1","1.2","1.3","1.4","1.5","1.6","1.7","1.8","1.9","2.0","2.1","2.2","2.3","2.4","2.5","2.6","2.7","2.8","2.9","3.0","3.1","3.2","3.3","3.4","3.5","3.6","3.7","3.8","3.9","4.0");
  $form['academic_info']['high_school_gpa'] = array(
    '#type' => 'select',
    '#title' => 'High School Cumulative GPA',
    '#options' => drupal_map_assoc($gpa_array),
    '#width' => '30%',
    '#align' => 'center',
    '#required' => true,
    '#maxlength' => 5,
  );

  $form['academic_info']['sat-act'] = array(
    '#type' => 'radios',
    '#title' => t('Did you take ACT or SAT?'),
    '#options' => array(
      'sat' => t('SAT'),
      'act' => t('ACT'),
    ),
    '#required' => TRUE,
  );

  $sat_scores = array("510-550", "550-610", "620-660", "670-710", "720-760", "770-810", "820-850", "860-890", "900-930", "940-970", "980-1010", "1020-1040", "1050-1080", "1090-1120", "1130-1160", "1170-1200", "1210-1240", "1250-1280", "1290-1320", "1330-1350", "1360-1390", "1400-1430", "1440-1480", "1490-1530", "1540-1590", "1600");
  $form['academic_info']['sat'] = array(
    '#type' => 'select',
    '#title' => 'Composite SAT score',
    '#description' => t('combination of verbal and math score only'),
    '#options' => drupal_map_assoc($sat_scores),
    '#maxlength' => 10,
    '#states' => array(
      'visible' => array(
        ':input[name="sat-act"]' => array(
          'value' => 'sat',
          '#required' => true,
        ),
      ),
    ),
  );

  $act_min = 11;
  $act_max = 36;
  $form['academic_info']['act'] = array(
    '#type' => 'select',
    '#title' => 'Composite ACT score',
    '#options' => drupal_map_assoc(range($act_min, $act_max)),
    '#width' => '30%',
    '#align' => 'center',

    '#maxlength' => 3,
    '#states' => array(
      'visible' => array(
        ':input[name="sat-act"]' => array(
          'value' => 'act',
          '#required' => true,
        ),
      ),
    ),
  );

  $form['dependency_status'] = array(
    '#type' => 'fieldset',
    '#title' => t('Dependency Status'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );

  $form['dependency_status']['born_before_1973'] = array(
    '#type' => 'radios',
    '#title' => t('Were you born before January 1, 1993?'),
    '#options' => array(
      'yes' => t('Yes'),
      'no' => t('No'),
    ),
    '#required' => TRUE,
  );

  $form['dependency_status']['married'] = array(
    '#type' => 'radios',
    '#title' => t('As of today, are you married? (Answer "Yes" if you are separated but not divorced.)'),
    '#options' => array(
      'yes' => t('Yes'),
      'no' => t('No'),
    ),
    '#required' => TRUE,
  );

  $form['dependency_status']['in_masters_or_doctorate_program'] = array(
    '#type' => 'radios',
    '#title' => t('At the beginning of the 2016-2017 school year, will you be working on a master\'s or doctorate program (such as an M.A., M.B.A., M.D., J.D., Ph.D., EdD., graduate certificate, etc.)?'),
    '#options' => array(
      'yes' => t('Yes'),
      'no' => t('No'),
    ),
    '#required' => TRUE,
  );

  $form['dependency_status']['active_duty'] = array(
    '#type' => 'radios',
    '#title' => t('Are you currently serving on active duty in the U.S. armed forces for purposes other than training? (If you are a National Guard of Reserves enlistee, are you on active duty for other than state or training purposes?'),
    '#options' => array(
      'yes' => t('Yes'),
      'no' => t('No'),
    ),
    '#required' => TRUE,
  );

  $form['dependency_status']['veteran'] = array(
    '#type' => 'radios',
    '#title' => t('Are you a veteran of the U.S. Armed Forces?'),
    '#options' => array(
      'yes' => t('Yes'),
      'no' => t('No'),
    ),
    '#required' => TRUE,
    '#description' => t('<p><strong>Answer No</strong> (you are not a veteran) if you (1) have never engaged in active duty in the U.S. armed forces, (2) are currently a Reserve Officers\' Training Corps (ROTC) student or a cadet or midshipman at a service academy, (3) are a National Guard or Reserves enlistee activated only for state or training purposes, or (4) were engaged in active duty in the U.S. armed forces but released under dishonorable conditions. Also answer No if you are currently serving in the U.S. armed forces and will continue to serve through June 30, 2017.</p>

<p><strong>Answer Yes</strong> (you are a veteran) if you (1) have engaged in active duty in the U.S. armed forces or are a National Guard or Reserves enlistee who was called to active duty for other than state or training purposes, or were a cadet or midshipman at one of the service academies and (2) were released under a condition other than dishonorable. Also answer Yes if you are not a veteran now but will be one by June 30, 2017.</p>'),
  );

  $form['dependency_status']['have_dependent_children'] = array(
    '#type' => 'radios',
    '#title' => t('Do you have children who will receive more than half of their support from you between July 1,' . (date('Y')) . ' and June 30, ' . (date('Y') + 1) . ' ?'),
    '#options' => array(
      'yes' => t('Yes'),
      'no' => t('No'),
    ),
    '#required' => TRUE,
  );

  $form['dependency_status']['other_dependents'] = array(
    '#type' => 'radios',
    '#title' => t('Do you have dependents (other than your children or spouse) who live with you and who receive more than half of their support from you, now and through June 30, ' . (date('Y') + 1) . ' ?'),
    '#options' => array(
      'yes' => t('Yes'),
      'no' => t('No'),
    ),
    '#required' => TRUE,
  );

  $form['dependency_status']['parents_deceased'] = array(
    '#type' => 'radios',
    '#title' => t('At any time since you turned age 13, were both your parents deceased, were you in foster care, or were you a dependent or ward of the court?'),
    '#options' => array(
      'yes' => t('Yes'),
      'no' => t('No'),
    ),
    '#required' => TRUE,
  );

  $form['dependency_status']['emancipated_or_guardianship'] = array(
    '#type' => 'radios',
    '#title' => t('Has it been determined by a court in your state of legal residence that you are an emancipated minor or that you are in a legal guardianship?'),
    '#options' => array(
      'yes' => t('Yes'),
      'no' => t('No'),
    ),
    '#required' => TRUE,
  );

  $form['dependency_status']['unaccompanied_youth'] = array(
    '#type' => 'radios',
    '#title' => t('At any time on or after July 1, ' . (date('Y') - 1) . ', were you determined to be an unaccompanied youth who was homeless, as determined by (a) your high school or district homeless liaison or (b) the director of an emergency shelter or transitional housing program funded by the U.S. Department of Housing and Urban Development?'),
    '#options' => array(
      'yes' => t('Yes'),
      'no' => t('No'),
    ),
    '#required' => TRUE,
  );

  $form['dependency_status']['homeless_youth'] = array(
    '#type' => 'radios',
    '#title' => t('At any time on or after July 1, ' . (date('Y') - 1) . ', did the director of a runaway or homeless youth basic center or transitional living program determine that you were an unaccompanied youth who was homeless or were self-supporting and at risk of being homeless?'),
    '#options' => array(
      'yes' => t('Yes'),
      'no' => t('No'),
    ),
    '#required' => TRUE,
  );

  $form['dependency_status']['dependent_student'] = array(
    '#markup' => t('<p>If you answered <strong>YES</strong> to any of the above questions you are an <strong>independent student</strong>.</p>

<p>If you answered <strong>NO</strong> to all the questions above you are a <strong>dependent student</strong>.</p>

<p><strong><em>A dependent child</em></strong> does not have to live with you, so long as the child receives more than half of his/her support from you. The child may include a biological or adopted child, or a child for whom you are the legal guardian. Note that generally speaking, if the child meets the 50% support test, the child should be claimed as an exemption on your income tax return.</p>'),
  );


  $form['efc'] = array(
    '#type' => 'fieldset',
    '#title' => t('Expected Family Contribution (EFC)'),
    '#description' => t('To determine your Expected Family Contribution (EFC), you must go to the FinAid quick EFC calculator. ( <a href="http://www.finaid.org/calculators/scripts/quickefc.cgi" target="_blank">Click here to calculate your EFC</a> .) You will need your and your parent\'s most recent federal tax information to complete this section. Once you have calculated your EFC, close that browser window to return to this one.'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );

  $form['efc']['expected_family_income'] = array(
    '#type' => 'textfield',
    '#required' => TRUE,
    '#title' => "Your Expected Family Income",
    '#description' => "Insert your TOTAL EXPECTED FAMILY CONTRIBUTION here",
    '#size' => 10,
    '#maxlength' => 15,
  );

  $form['efc']['ohio_residents'] = array(
    '#type' => 'radios',
    '#title' => t('Have you or your parent(s) continuously lived in Ohio for at least the last 12 months?'),
    '#options' => array(
      'yes' => t('Yes'),
      'no' => t('No'),
    ),
    '#required' => TRUE,
  );

  $form['activities'] = array(
    '#type' => 'fieldset',
    '#title' => t('Activities'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );

  $form['activities']['extra_curricular_activities'] = array(
    '#type' => 'radios',
    '#title' => t('Do you expect to participate in any extra curricular activities?'),
    '#options' => array(
      'yes' => t('Yes'),
      'no' => t('No'),
    ),
    '#required' => TRUE,
  );

  $form['activities']['scholarships'] = array(
    '#type' => 'radios',
    '#title' => t('Have you been in contact with a coach/director for consideration of an athletic/music scholarship?'),
    '#options' => array(
      'yes' => t('Yes'),
      'no' => t('No'),
    ),
    '#required' => TRUE,
  );

  $form['activities']['which_activity'] = array(
    '#type' => 'select',
    '#title' => t('Which extra curricular activity?'),
    '#options' => array(
      'none' => t('N/A'),
      'band' => t('Band'),
      'baseball' => t('Baseball'),
      'basketball' => t('Basketball'),
      'cheerleading' => t('Cheerleading'),
      'choir' => t('Choir'),
      'cross_country' => t('Cross Country'),
      'dance' => t('Dance'),
      'equestrian' => t('Equestrian'),
      'football' => t('Football'),
      'golf' => t('Golf'),
      'lacrosse' => t('Lacrosse'),
      'soccer' => t('Soccer'),
      'softball' => t('Softball'),
      'tennis' => t('Tennis'),
      'theatre' => t('Theatre'),
      'track' => t('Track'),
      'student_government' => t('Student Government'),
      'volleyball' => t('Volleyball'),
      'wrestling' => t('Wrestling'),
      'other_student_organization' => t('Other Student Organization'),
    ),
    '#required' => TRUE,
  );

  $form['activities']['extra_activity'] = array(
    '#type' => 'select',
    '#title' => t('Additional extra curricular activity?'),
    '#options' => array(
      'none' => t('N/A'),
      'band' => t('Band'),
      'baseball' => t('Baseball'),
      'basketball' => t('Basketball'),
      'cheerleading' => t('Cheerleading'),
      'choir' => t('Choir'),
      'cross_country' => t('Cross Country'),
      'dance' => t('Dance'),
      'equestrian' => t('Equestrian'),
      'football' => t('Football'),
      'golf' => t('Golf'),
      'lacrosse' => t('Lacrosse'),
      'soccer' => t('Soccer'),
      'softball' => t('Softball'),
      'tennis' => t('Tennis'),
      'theatre' => t('Theatre'),
      'track' => t('Track'),
      'student_government' => t('Student Government'),
      'volleyball' => t('Volleyball'),
      'wrestling' => t('Wrestling'),
      'other_student_organization' => t('Other Student Organization'),
    ),
    '#required' => TRUE,
  );

  $form['completed_npc'] = array(
    '#type' => 'fieldset',
    '#title' => t('You have completed the Tiffin University Net Price Calculator'),
    '#description' => t('Please press the submit button <strong>only once</strong>.<br>It may take a moment to process your information.'),
    '#collapsible' => FALSE,
  );


  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
    '#validate' => array('tiffin_npc_form_validate'),
    '#submit' => array('tiffin_npc_form_submit'),
  );
  return $form;
}

/**
 * Validates the form.
 */
function tiffin_npc_form_validate($form, &$form_state) {
/*  $year_of_birth = $form_state['values']['year_of_birth'];
  if ($year_of_birth && ($year_of_birth < 1900 || $year_of_birth > 2000)) {
    form_set_error('year_of_birth', t('Enter a year between 1900 and 2000.'));
  }*/
}

/**
 * Add a submit handler/function to the form.
 *
 * This will add a completion message to the screen when the
 * form successfully processes
 */
function tiffin_npc_form_submit($form, &$form_state) {
  drupal_set_message(t('The form has been submitted.'));
}
